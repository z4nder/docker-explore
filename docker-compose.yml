version: '3.8'

networks:
  laravel-app:
    name: 'laravel-app'

services:
  php:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: php
    networks:
      - laravel-app
    volumes:
      - ./src:/var/www/html

  mysql:
    image: mysql:5.7.32
    container_name: mysql
    ports:
      - "4306:3306"
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
    networks:
      - laravel-app

  nginx:
    build:
      context: .
      dockerfile: nginx.dockerfile
    container_name: nginx
    depends_on:
      - php
      - mysql
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./src:/var/www/html:delegated
    networks:
      - laravel-app

  composer:
    image: composer:latest
    container_name: composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html:delegated
    networks:
      - laravel-app

  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: artisan
    working_dir: /var/www/html
    entrypoint: ["php", "artisan"]
    networks:
      - laravel-app
    volumes:
      - ./src:/var/www/html

  phpunit:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: phpunit
    working_dir: /var/www/html
    entrypoint: [ "/var/www/html/vendor/bin/phpunit" ]
    networks:
      - laravel-app
    volumes:
      - ./src:/var/www/html

  npm:
    image: node:current-alpine
    container_name: npm
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      - laravel-app
    ports:
      - '3000:3000'